% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms_synchronize_timestep.R
\name{ms_synchronize_timestep}
\alias{ms_synchronize_timestep}
\title{Aggregate or interpolate MacroSheds data to specified time intervals}
\usage{
ms_synchronize_timestep(
  d,
  desired_interval,
  interpolate_method = "linear",
  interpolate_limit,
  summary_fun,
  quiet = FALSE
)
}
\arguments{
\item{d}{\code{data.frame}. A \code{data.frame} in MacroSheds format (see \href{https://doi.org/10.6084/m9.figshare.c.5621740}{MacroSheds documentation} for definitions),
which can be generated by \code{\link[=ms_load_product]{ms_load_product()}}.}

\item{desired_interval}{character. Input that can be parsed by the "by"
parameter of base::seq.POSIXt, e.g. "5 mins", "1 day", "1 month".}

\item{interpolate_method}{character. One of:
\itemize{
\item "linear": the default. Linear interpolation.
\item "nocb": next observation carried backward. Useful for interpolating precipitation chemistry reported as concentration.
\item "nocb_mean": the next observation, divided by the number of preceding observations that are missing, carried backward. Useful for e.g. precipitation measured with a collector after x days.
\item "zero": replace missing values with 0. Useful for e.g. precipitation series where nothing is reported during periods of no rain/snow.
}}

\item{interpolate_limit}{numeric. The maximum number of consecutive points to interpolate.}

\item{summary_fun}{optional character. One of "mean" or "sum". The function that will be used to
summarize data if desired_interval is larger than the input data in d.}

\item{quiet}{logical. Should warnings be printed to console.}
}
\value{
returns a \code{tibble} with data in the new desired_interval with a
ms_interp column indicating if a value was interpolated.
}
\description{
This function is used to set the time interval of a \code{data.frame} in MacroSheds
format (see \href{https://doi.org/10.6084/m9.figshare.c.5621740}{MacroSheds documentation}). Depending on whether the interval of the input is
greater than or less than the desired output interval, this function either aggregates
records (by mean or sum), or interpolates them by one of four methods.
}
\examples{
### Load some MacroSheds data:
ms_root = 'data/macrosheds'
ms_download_core_data(macrosheds_root = ms_root,
                      domains = 'hbef')
d <- ms_load_product(macrosheds_root = ms_root, 
                     prodname = 'stream_chemistry',
                     domains = 'hbef',
                     filter_vars = c('NO3_N', 'Na', 'Mg', 'SO4_S'))
                     
### interpolate to 15-minute intervals, but don't fill gaps larger than 24 hours
ms_synchronize_timestep(d, '15 min', 96)

### aggregate samples to weekly interval by mean, and fill gaps of < 3 weeks
ms_synchronize_timestep(d, '1 week', 3, summary_fun = 'mean')
}
\author{
Spencer Rhea, \email{spencerrhea41@gmail.com}

Mike Vlah

Wes Slaughter
}
